package manager.gui;

import javax.swing.JFrame;
import manager.guiApp.NetworkVisualizer;
import manager.guiApp.GUITopology;
import mesh.ScanPeriod;

/**
 * This class creates a dialog for network topology pruning
 * @author Song Han
 */
public class GraphPruneDialog extends javax.swing.JDialog {

    /** Creates new form GraphPruneDialog
     * @param parent the parent frame the dialog will reside on
     * @param topo the network topology
     * @param visualizer the visualization viewer
     */
    public GraphPruneDialog(JFrame parent, GUITopology topo, NetworkVisualizer visualizer)
    {
        super(parent, true);
        pFrame = parent;
        topology = topo;
        nwkVisualizer = visualizer;

        initComponents();
        customizeComponents();

        setTitle("Graph Pruning Dialog");
    }

    /**
     * This function initializes the customized graphic components in the dialog
     */
    public void customizeComponents()
    {
        // whether the nodes with the speficied type are selected
        AP.setSelected(true);
        Gateway.setSelected(true);
        Device.setSelected(true);
        Router.setSelected(true);
        HandHeld.setSelected(true);

        // the maximum total power of the node
        MaxTotalPower.setMinimum(0);
        MaxTotalPower.setMaximum(100);
        MaxTotalPower.setValue(100);

        // the minimum total power of the node
        MinTotalPower.setMinimum(0);
        MinTotalPower.setMaximum(100);
        MinTotalPower.setValue(0);

        // the maximum remaining power of the node
        MaxRemainedPower.setMinimum(0);
        MaxRemainedPower.setMaximum(100);
        MaxRemainedPower.setValue(100);

        // the minimum remaining power of the node
        MinRemainedPower.setMinimum(0);
        MinRemainedPower.setMaximum(100);
        MinRemainedPower.setValue(0);

        // the maximum weight of the edge
        MaxEdgeWeight.setMaximum(10);
        MaxEdgeWeight.setMinimum(0);
        MaxEdgeWeight.setValue(10);

        // the minimum weight of the edge
        MinEdgeWeight.setMaximum(10);
        MinEdgeWeight.setMinimum(0);
        MinEdgeWeight.setValue(0);

        // the max capacity of the edge
        MaxEdgeCapacity.setMaximum(10);
        MaxEdgeCapacity.setMinimum(0);
        MaxEdgeCapacity.setValue(10);

        // the minimum capacity of the edge
        MinEdgeCapacity.setMaximum(10);
        MinEdgeCapacity.setMinimum(0);
        MinEdgeCapacity.setValue(0);

        // the maximum signal strength of the edge
        MaxSignalStrength.setMaximum(5);
        MaxSignalStrength.setMinimum(-60);
        MaxSignalStrength.setValue(5);

        // the minimum signal strength of the edge
        MinSignalStrength.setMaximum(5);
        MinSignalStrength.setMinimum(-60);
        MinSignalStrength.setValue((int) (topology.GetPruneOption().getSignalStrengthLowerBound()));

        // the minimum scanning period of the device
        jComboBox1.addItem("_0_ms");
        jComboBox1.addItem("_250_ms");
        jComboBox1.addItem("_1_sec");
        jComboBox1.addItem("_2_sec");
        jComboBox1.addItem("_4_sec");
        jComboBox1.addItem("_8_sec");
        jComboBox1.addItem("_16_sec");
        jComboBox1.addItem("_32_sec");
        jComboBox1.addItem("_1_min_4_sec");
        jComboBox1.addItem("_2_min_8_sec");
        jComboBox1.addItem("_4_min_16_sec");
        jComboBox1.addItem("_8_min_32_sec");

        // the maximum scanning period of the device
        jComboBox2.addItem("_0_ms");
        jComboBox2.addItem("_250_ms");
        jComboBox2.addItem("_1_sec");
        jComboBox2.addItem("_2_sec");
        jComboBox2.addItem("_4_sec");
        jComboBox2.addItem("_8_sec");
        jComboBox2.addItem("_16_sec");
        jComboBox2.addItem("_32_sec");
        jComboBox2.addItem("_1_min_4_sec");
        jComboBox2.addItem("_2_min_8_sec");
        jComboBox2.addItem("_4_min_16_sec");
        jComboBox2.addItem("_8_min_32_sec");

        jComboBox1.setSelectedIndex(0);
        jComboBox2.setSelectedIndex(11);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel3 = new javax.swing.JLabel();
        MaxTotalPower = new javax.swing.JSlider();
        jLabel4 = new javax.swing.JLabel();
        MinTotalPower = new javax.swing.JSlider();
        jLabel5 = new javax.swing.JLabel();
        MaxRemainedPower = new javax.swing.JSlider();
        jLabel6 = new javax.swing.JLabel();
        MinRemainedPower = new javax.swing.JSlider();
        jLabel7 = new javax.swing.JLabel();
        Gateway = new javax.swing.JCheckBox();
        AP = new javax.swing.JCheckBox();
        Device = new javax.swing.JCheckBox();
        Router = new javax.swing.JCheckBox();
        HandHeld = new javax.swing.JCheckBox();
        jLabel8 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jLabel9 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel10 = new javax.swing.JLabel();
        MaxEdgeWeight = new javax.swing.JSlider();
        jLabel11 = new javax.swing.JLabel();
        MinEdgeWeight = new javax.swing.JSlider();
        jLabel12 = new javax.swing.JLabel();
        MaxEdgeCapacity = new javax.swing.JSlider();
        jLabel13 = new javax.swing.JLabel();
        MinEdgeCapacity = new javax.swing.JSlider();
        jLabel14 = new javax.swing.JLabel();
        MaxSignalStrength = new javax.swing.JSlider();
        jLabel15 = new javax.swing.JLabel();
        MinSignalStrength = new javax.swing.JSlider();
        jButton1 = new javax.swing.JButton();
        jTextFieldMaxTotalPower = new javax.swing.JTextField();
        jTextFieldMaxRemainedPower = new javax.swing.JTextField();
        jTextFieldMinTotalPower = new javax.swing.JTextField();
        jTextFieldMinRemainedPower = new javax.swing.JTextField();
        jTextFieldMaxEdgeWeight = new javax.swing.JTextField();
        jTextFieldMaxEdgeCapacity = new javax.swing.JTextField();
        jTextFieldMinEdgeWeight = new javax.swing.JTextField();
        jTextFieldMinEdgeCapacity = new javax.swing.JTextField();
        jTextFieldMaxSignalStrength = new javax.swing.JTextField();
        jTextFieldMinSignalStrength = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setName("Form"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(manager.ManagerApp.class).getContext().getResourceMap(GraphPruneDialog.class);
        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        jSeparator1.setName("jSeparator1"); // NOI18N

        jLabel3.setText(resourceMap.getString("jLabel3.text")); // NOI18N
        jLabel3.setName("jLabel3"); // NOI18N

        MaxTotalPower.setName("MaxTotalPower"); // NOI18N
        MaxTotalPower.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                MaxTotalPowerStateChanged(evt);
            }
        });

        jLabel4.setText(resourceMap.getString("jLabel4.text")); // NOI18N
        jLabel4.setName("jLabel4"); // NOI18N

        MinTotalPower.setName("MinTotalPower"); // NOI18N
        MinTotalPower.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                MinTotalPowerStateChanged(evt);
            }
        });

        jLabel5.setText(resourceMap.getString("jLabel5.text")); // NOI18N
        jLabel5.setName("jLabel5"); // NOI18N

        MaxRemainedPower.setName("MaxRemainedPower"); // NOI18N
        MaxRemainedPower.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                MaxRemainedPowerStateChanged(evt);
            }
        });

        jLabel6.setText(resourceMap.getString("jLabel6.text")); // NOI18N
        jLabel6.setName("jLabel6"); // NOI18N

        MinRemainedPower.setName("MinRemainedPower"); // NOI18N
        MinRemainedPower.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                MinRemainedPowerStateChanged(evt);
            }
        });

        jLabel7.setText(resourceMap.getString("jLabel7.text")); // NOI18N
        jLabel7.setName("jLabel7"); // NOI18N

        Gateway.setText(resourceMap.getString("Gateway.text")); // NOI18N
        Gateway.setName("Gateway"); // NOI18N

        AP.setText(resourceMap.getString("AP.text")); // NOI18N
        AP.setName("AP");

        Device.setText(resourceMap.getString("Device.text")); // NOI18N
        Device.setName("Device");

        Router.setText(resourceMap.getString("Router.text")); // NOI18N
        Router.setName("Router");

        HandHeld.setText(resourceMap.getString("HandHeld.text")); // NOI18N
        HandHeld.setName("HandHeld");

        jLabel8.setText(resourceMap.getString("jLabel8.text")); // NOI18N
        jLabel8.setName("jLabel8"); // NOI18N

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] {}));
        jComboBox1.setName("jComboBox1");

        jLabel9.setText(resourceMap.getString("jLabel9.text")); // NOI18N
        jLabel9.setName("jLabel9"); // NOI18N

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { }));
        jComboBox2.setName("jComboBox2"); // NOI18N

        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N

        jSeparator2.setName("jSeparator2"); // NOI18N

        jLabel10.setText(resourceMap.getString("jLabel10.text")); // NOI18N
        jLabel10.setName("jLabel10"); // NOI18N

        MaxEdgeWeight.setName("MaxEdgeWeight"); // NOI18N
        MaxEdgeWeight.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                MaxEdgeWeightStateChanged(evt);
            }
        });

        jLabel11.setText(resourceMap.getString("jLabel11.text")); // NOI18N
        jLabel11.setName("jLabel11"); // NOI18N

        MinEdgeWeight.setName("MinEdgeWeight"); // NOI18N
        MinEdgeWeight.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                MinEdgeWeightStateChanged(evt);
            }
        });

        jLabel12.setText(resourceMap.getString("jLabel12.text")); // NOI18N
        jLabel12.setName("jLabel12"); // NOI18N

        MaxEdgeCapacity.setName("MaxEdgeCapacity"); // NOI18N
        MaxEdgeCapacity.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                MaxEdgeCapacityStateChanged(evt);
            }
        });

        jLabel13.setText(resourceMap.getString("jLabel13.text")); // NOI18N
        jLabel13.setName("jLabel13"); // NOI18N

        MinEdgeCapacity.setName("MinEdgeCapacity"); // NOI18N
        MinEdgeCapacity.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                MinEdgeCapacityStateChanged(evt);
            }
        });

        jLabel14.setText(resourceMap.getString("jLabel14.text")); // NOI18N
        jLabel14.setName("jLabel14"); // NOI18N

        MaxSignalStrength.setName("MaxSignalStrength"); // NOI18N
        MaxSignalStrength.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                MaxSignalStrengthStateChanged(evt);
            }
        });

        jLabel15.setText(resourceMap.getString("jLabel15.text")); // NOI18N
        jLabel15.setName("jLabel15"); // NOI18N

        MinSignalStrength.setName("MinSignalStrength"); // NOI18N
        MinSignalStrength.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                MinSignalStrengthStateChanged(evt);
            }
        });

        jButton1.setText(resourceMap.getString("jButton1.text")); // NOI18N
        jButton1.setName("jButton1"); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonHandler(evt);
            }
        });

        jTextFieldMaxTotalPower.setText(resourceMap.getString("jTextFieldMaxTotalPower.text")); // NOI18N
        jTextFieldMaxTotalPower.setName("jTextFieldMaxTotalPower"); // NOI18N

        jTextFieldMaxRemainedPower.setText(resourceMap.getString("jTextFieldMaxRemainedPower.text")); // NOI18N
        jTextFieldMaxRemainedPower.setName("jTextFieldMaxRemainedPower"); // NOI18N

        jTextFieldMinTotalPower.setText(resourceMap.getString("jTextFieldMinTotalPower.text")); // NOI18N
        jTextFieldMinTotalPower.setName("jTextFieldMinTotalPower"); // NOI18N

        jTextFieldMinRemainedPower.setText(resourceMap.getString("jTextFieldMinRemainedPower.text")); // NOI18N
        jTextFieldMinRemainedPower.setName("jTextFieldMinRemainedPower"); // NOI18N

        jTextFieldMaxEdgeWeight.setText(resourceMap.getString("jTextFieldMaxEdgeWeight.text")); // NOI18N
        jTextFieldMaxEdgeWeight.setName("jTextFieldMaxEdgeWeight"); // NOI18N

        jTextFieldMaxEdgeCapacity.setText(resourceMap.getString("jTextFieldMaxEdgeCapacity.text")); // NOI18N
        jTextFieldMaxEdgeCapacity.setName("jTextFieldMaxEdgeCapacity"); // NOI18N

        jTextFieldMinEdgeWeight.setText(resourceMap.getString("jTextFieldMinEdgeWeight.text")); // NOI18N
        jTextFieldMinEdgeWeight.setName("jTextFieldMinEdgeWeight"); // NOI18N

        jTextFieldMinEdgeCapacity.setText(resourceMap.getString("jTextFieldMinEdgeCapacity.text")); // NOI18N
        jTextFieldMinEdgeCapacity.setName("jTextFieldMinEdgeCapacity"); // NOI18N

        jTextFieldMaxSignalStrength.setText(resourceMap.getString("jTextFieldMaxSignalStrength.text")); // NOI18N
        jTextFieldMaxSignalStrength.setName("jTextFieldMaxSignalStrength"); // NOI18N

        jTextFieldMinSignalStrength.setText(resourceMap.getString("jTextFieldMinSignalStrength.text")); // NOI18N
        jTextFieldMinSignalStrength.setName("jTextFieldMinSignalStrength"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel14)
                            .addComponent(jLabel12)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(243, 243, 243)
                        .addComponent(jButton1))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 603, Short.MAX_VALUE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 603, Short.MAX_VALUE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(MaxEdgeCapacity, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(MaxSignalStrength, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel10)
                                                .addGap(18, 18, 18)
                                                .addComponent(MaxEdgeWeight, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(jTextFieldMaxSignalStrength, 0, 0, Short.MAX_VALUE)
                                            .addComponent(jTextFieldMaxEdgeCapacity, javax.swing.GroupLayout.Alignment.LEADING, 0, 0, Short.MAX_VALUE)
                                            .addComponent(jTextFieldMaxEdgeWeight, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addGap(17, 17, 17)
                                                .addComponent(jLabel11)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 266, Short.MAX_VALUE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(18, 18, 18)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel15)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                                                        .addGap(245, 245, 245))))))))
                            .addComponent(jLabel1)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(MaxTotalPower, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(MaxRemainedPower, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jTextFieldMaxRemainedPower, 0, 0, Short.MAX_VALUE)
                                    .addComponent(jTextFieldMaxTotalPower, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel4))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(MinEdgeCapacity, 0, 0, Short.MAX_VALUE)
                                    .addComponent(MinTotalPower, javax.swing.GroupLayout.DEFAULT_SIZE, 97, Short.MAX_VALUE)
                                    .addComponent(MinRemainedPower, javax.swing.GroupLayout.DEFAULT_SIZE, 97, Short.MAX_VALUE)
                                    .addComponent(MinEdgeWeight, javax.swing.GroupLayout.DEFAULT_SIZE, 97, Short.MAX_VALUE)
                                    .addComponent(MinSignalStrength, javax.swing.GroupLayout.DEFAULT_SIZE, 97, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jTextFieldMinRemainedPower, 0, 0, Short.MAX_VALUE)
                                        .addComponent(jTextFieldMinTotalPower, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jTextFieldMinEdgeCapacity, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextFieldMinEdgeWeight, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextFieldMinSignalStrength, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel7)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Gateway)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(AP)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(Device)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(Router)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(HandHeld))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addGap(18, 18, 18)
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel9)
                                .addGap(16, 16, 16)
                                .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addComponent(jLabel1)
                .addGap(12, 12, 12)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jTextFieldMaxTotalPower, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(MaxTotalPower, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel5)
                                            .addComponent(MaxRemainedPower, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel7))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jTextFieldMaxRemainedPower, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(MinTotalPower, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(MinRemainedPower, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(4, 4, 4)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Gateway)
                            .addComponent(AP)
                            .addComponent(Device)
                            .addComponent(Router)
                            .addComponent(HandHeld))
                        .addGap(14, 14, 14)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jTextFieldMinTotalPower, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldMinRemainedPower, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(30, 30, 30)
                .addComponent(jLabel2)
                .addGap(8, 8, 8)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldMaxEdgeWeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldMaxEdgeCapacity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(MaxEdgeWeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldMinEdgeWeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel12)
                                    .addGap(9, 9, 9))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jTextFieldMinEdgeCapacity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(3, 3, 3)))
                            .addComponent(MaxEdgeCapacity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(MinEdgeWeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(MinEdgeCapacity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel14)
                            .addComponent(MaxSignalStrength, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jTextFieldMinSignalStrength, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(MinSignalStrength, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextFieldMaxSignalStrength, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(23, 23, 23)
                .addComponent(jButton1)
                .addContainerGap(25, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * This function update the GraphPruneOption structure according to the input from the dialog
     */
    private void okButtonHandler(java.awt.event.ActionEvent evt) {

        topology.GetPruneOption().setAPDisplayed(AP.isSelected());
        topology.GetPruneOption().setGWDisplayed(Gateway.isSelected());
        topology.GetPruneOption().setDeviceDisplayed(Device.isSelected());
        topology.GetPruneOption().setRouterDisplayed(Router.isSelected());
        topology.GetPruneOption().setHHDisplayed(HandHeld.isSelected());

        topology.GetPruneOption().setCapacityLowerBound(MinEdgeCapacity.getValue());
        topology.GetPruneOption().setCapacityUpperBound(MaxEdgeCapacity.getValue());

        topology.GetPruneOption().setPowerAllLowerBound(MinTotalPower.getValue());
        topology.GetPruneOption().setPowerAllUpperBound(MaxTotalPower.getValue());

        topology.GetPruneOption().setPowerLeftLowerBound(MinRemainedPower.getValue());
        topology.GetPruneOption().setPowerLeftUpperBound(MaxRemainedPower.getValue());

        topology.GetPruneOption().setWeightLowerBound(MinEdgeWeight.getValue());
        topology.GetPruneOption().setWeightUpperBound(MaxEdgeWeight.getValue());

        topology.GetPruneOption().setSignalStrengthLowerBound(MinSignalStrength.getValue());
        topology.GetPruneOption().setSignalStrengthUpperBound(MaxSignalStrength.getValue());

        topology.GetPruneOption().setScanPeriodLowerBound(getScanPeriodFromString((String) (jComboBox1.getSelectedItem())));
        topology.GetPruneOption().setScanPeriodUpperBound(getScanPeriodFromString((String) (jComboBox2.getSelectedItem())));

        
        
        /*********************************************************/
        
        // update this information in the NMTopology
        
        
        
        // enable the two predicates
        nwkVisualizer.enableVertexPredicate();
        nwkVisualizer.enableEdgePredicate();
        pFrame.repaint();

        dispose();
    }

    private void MaxTotalPowerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_MaxTotalPowerStateChanged
        jTextFieldMaxTotalPower.setText("" + MaxTotalPower.getValue());
    }//GEN-LAST:event_MaxTotalPowerStateChanged

    private void MinTotalPowerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_MinTotalPowerStateChanged
        jTextFieldMinTotalPower.setText("" + MinTotalPower.getValue());
    }//GEN-LAST:event_MinTotalPowerStateChanged

    private void MaxRemainedPowerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_MaxRemainedPowerStateChanged
        jTextFieldMaxRemainedPower.setText("" + MaxRemainedPower.getValue());
    }//GEN-LAST:event_MaxRemainedPowerStateChanged

    private void MinRemainedPowerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_MinRemainedPowerStateChanged
        jTextFieldMinRemainedPower.setText("" + MinRemainedPower.getValue());
    }//GEN-LAST:event_MinRemainedPowerStateChanged

    private void MaxEdgeWeightStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_MaxEdgeWeightStateChanged
        jTextFieldMaxEdgeWeight.setText("" + MaxEdgeWeight.getValue());
    }//GEN-LAST:event_MaxEdgeWeightStateChanged

    private void MinEdgeWeightStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_MinEdgeWeightStateChanged
        jTextFieldMinEdgeWeight.setText("" + MinEdgeWeight.getValue());
    }//GEN-LAST:event_MinEdgeWeightStateChanged

    private void MinEdgeCapacityStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_MinEdgeCapacityStateChanged
        jTextFieldMinEdgeCapacity.setText("" + MinEdgeCapacity.getValue());
    }//GEN-LAST:event_MinEdgeCapacityStateChanged

    private void MaxEdgeCapacityStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_MaxEdgeCapacityStateChanged
        jTextFieldMaxEdgeCapacity.setText("" + MaxEdgeCapacity.getValue());
    }//GEN-LAST:event_MaxEdgeCapacityStateChanged

    private void MaxSignalStrengthStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_MaxSignalStrengthStateChanged
        jTextFieldMaxSignalStrength.setText("" + MaxSignalStrength.getValue());
    }//GEN-LAST:event_MaxSignalStrengthStateChanged

    private void MinSignalStrengthStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_MinSignalStrengthStateChanged
        jTextFieldMinSignalStrength.setText("" + MinSignalStrength.getValue());
    }//GEN-LAST:event_MinSignalStrengthStateChanged

    /**
     * This function retreives the scan period of the device from the string format
     * @param s the scan period of the device in the string format
     * @return the scan period of the device in the ScanPeriod class format
     */
    public ScanPeriod getScanPeriodFromString(String s)
    {
        if(s.equals("_0_ms"))
            return (new ScanPeriod(ScanPeriod._0_ms));
        else if(s.equals("_250_ms"))
            return (new ScanPeriod(ScanPeriod._250_ms));
        else if(s.equals("_1_sec"))
            return (new ScanPeriod(ScanPeriod._1_sec));
        else if(s.equals("_2_sec"))
            return (new ScanPeriod(ScanPeriod._2_sec));
        else if(s.equals("_4_sec"))
            return (new ScanPeriod(ScanPeriod._4_sec));
        else if(s.equals("_8_sec"))
            return (new ScanPeriod(ScanPeriod._8_sec));
        else if(s.equals("_16_sec"))
            return (new ScanPeriod(ScanPeriod._16_sec));
        else if(s.equals("_32_sec"))
            return (new ScanPeriod(ScanPeriod._32_sec));
        else if(s.equals("_1_min_4_sec"))
            return (new ScanPeriod(ScanPeriod._1_min_4_sec));
        else if(s.equals("_2_min_8_sec"))
            return (new ScanPeriod(ScanPeriod._2_min_8_sec));
        else if(s.equals("_4_min_16_sec"))
            return (new ScanPeriod(ScanPeriod._4_min_16_sec));
        else if(s.equals("_8_min_32_sec"))
            return (new ScanPeriod(ScanPeriod._8_min_32_sec));
        else
            return (new ScanPeriod(ScanPeriod._0_ms));
    }

    /**
    * @param args the command line arguments
    */
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox AP;
    private javax.swing.JCheckBox Device;
    private javax.swing.JCheckBox Gateway;
    private javax.swing.JCheckBox HandHeld;
    private javax.swing.JSlider MaxEdgeCapacity;
    private javax.swing.JSlider MaxEdgeWeight;
    private javax.swing.JSlider MaxRemainedPower;
    private javax.swing.JSlider MaxSignalStrength;
    private javax.swing.JSlider MaxTotalPower;
    private javax.swing.JSlider MinEdgeCapacity;
    private javax.swing.JSlider MinEdgeWeight;
    private javax.swing.JSlider MinRemainedPower;
    private javax.swing.JSlider MinSignalStrength;
    private javax.swing.JSlider MinTotalPower;
    private javax.swing.JCheckBox Router;
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTextField jTextFieldMaxEdgeCapacity;
    private javax.swing.JTextField jTextFieldMaxEdgeWeight;
    private javax.swing.JTextField jTextFieldMaxRemainedPower;
    private javax.swing.JTextField jTextFieldMaxSignalStrength;
    private javax.swing.JTextField jTextFieldMaxTotalPower;
    private javax.swing.JTextField jTextFieldMinEdgeCapacity;
    private javax.swing.JTextField jTextFieldMinEdgeWeight;
    private javax.swing.JTextField jTextFieldMinRemainedPower;
    private javax.swing.JTextField jTextFieldMinSignalStrength;
    private javax.swing.JTextField jTextFieldMinTotalPower;
    // End of variables declaration//GEN-END:variables

    GUITopology topology;
    NetworkVisualizer nwkVisualizer;
    JFrame pFrame;
}

