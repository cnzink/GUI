package manager;

import javax.swing.JOptionPane;
import org.jdesktop.application.Action;

/**
 * this class defines the AdditionalDeviceBox dialog
 * @author Song Han
 */
public class AdditionalDeviceBox extends javax.swing.JDialog {

    public static final int RET_CANCEL = 0;
    public static final int RET_OK = 1;

    /** Constructor function. It creates a new form AdditionalDeviceBox with the given parameters
     * @param parent the parent frame where the dialog will reside
     * @param deviceTag the device tag in the string format
     * @param deviceType the device type in the string format
     * @param deviceID the device ID in the string format
     * @param curIndex the current selected index in the table
     * @param joinKey the device join key in the string format
     */
    public AdditionalDeviceBox(java.awt.Frame parent, int curIndex,
            String deviceType, String deviceID, String joinKey, String deviceTag) {
        super(parent);
        initComponents();
        CurIndex = curIndex;
        DeviceType = deviceType;
        DeviceID = deviceID;
        JoinKey = joinKey;
        DeviceTag = deviceTag;
        
        // if a device information is selected in the table, then fill the information in the dialog
        if (curIndex >= 0) {
            this.setTitle(this.getTitle() + " - Edit");
            cbDeviceType.setSelectedItem(deviceType);
            txtDeviceID.setText(deviceID);
            txtJoinKey.setText(joinKey);
            txtDeviceTag.setText(deviceTag);
        } else {
            // otherwise the dialog if for a new device information.
            this.setTitle(this.getTitle() + " - New");
        }
    }

    /**
     * this function gets the device type
     * @return the device type
     */
    public String GetDeviceType() {
        return DeviceType;
    }

    /**
     * this function gets the device ID
     * @return the device ID
     */
    public String GetDeviceID() {
        return DeviceID;
    }

    /**
     * this function gets the device join key
     * @return the device join key
     */
    public String GetJoinKey() {
        return JoinKey;
    }

    /**
     * this function gets the device tag
     * @return the device tag
     */
    public String GetDeviceTag() {
        return DeviceTag;
    }

    /**
     * this function shows a dialog containing the given string information
     * @param the string to be shown in the dialog
     */
    private void ShowMessage(String msg)
    {
        JOptionPane.showMessageDialog(this, msg);
    }

    /**
     * this function validates the format of the text fields in the GUI.
     * @return true if the validation is successful. Otherwise return false.
     */
    private boolean Validate()
    {
        if (!ManagerConfig.ValidateHexString(txtDeviceID.getText(), 4, 4)) {
            ShowMessage("Improper format for Device ID.");
            return false;
        }

        if (!ManagerConfig.ValidateHexString(txtJoinKey.getText(), 8, 4)) {
            ShowMessage("Improper format for Join Key.");
            return false;
        }

        if (!ManagerConfig.ValidateHexString(txtDeviceTag.getText(), 6, 2)) {
            ShowMessage("Improper format for Device Tag.");
            return false;
        }

        if (ManagerConfig.GetAdditionalDeviceByID(CurIndex, txtDeviceID.getText()) != null) {
            ShowMessage("Device ID '" + txtDeviceID.getText().trim() + "' has been existed.");
            return false;
        }
        return true;
    }

    /**
     * this action close the dialog without change
     */
    @Action public void clickCancel() {
        doClose(RET_CANCEL);
    }

    /**
     * this action close the dialog and save the changes.
     */
    @Action public void clickOK() {
        if (Validate()) {
            DeviceType = cbDeviceType.getSelectedItem().toString();
            DeviceID = txtDeviceID.getText();
            JoinKey = txtJoinKey.getText();
            DeviceTag = txtDeviceTag.getText();
            doClose(RET_OK);
        }
    }

    /**
     * this function install the status of the close and dispose the dialog
     * @param retStatus return status of the close operation.
     */
    private void doClose(int retStatus) {
        returnStatus = retStatus;
        setVisible(false);
        dispose();
    }

    /**
     * this function gets the return status of the close operation
     * @return the return status of the close operation
     */
    public int getReturnStatus() {
        return returnStatus;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnOK = new javax.swing.JButton();
        btnClose = new javax.swing.JButton();
        txtDeviceID = new javax.swing.JTextField();
        javax.swing.JLabel lbDeviceID = new javax.swing.JLabel();
        txtJoinKey = new javax.swing.JTextField();
        javax.swing.JLabel lbJoinKey = new javax.swing.JLabel();
        javax.swing.JLabel lbDeviceIDExample = new javax.swing.JLabel();
        javax.swing.JLabel lbJoinKeyExample = new javax.swing.JLabel();
        javax.swing.JLabel lbDeviceTagExample = new javax.swing.JLabel();
        txtDeviceTag = new javax.swing.JTextField();
        javax.swing.JLabel lbDeviceTag = new javax.swing.JLabel();
        javax.swing.JLabel lbDeviceType = new javax.swing.JLabel();
        cbDeviceType = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(manager.ManagerApp.class).getContext().getResourceMap(AdditionalDeviceBox.class);
        setTitle(resourceMap.getString("AdditionalDeviceBox.title")); // NOI18N
        setModalityType(java.awt.Dialog.ModalityType.APPLICATION_MODAL);
        setName("AdditionalDeviceBox"); // NOI18N
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(manager.ManagerApp.class).getContext().getActionMap(AdditionalDeviceBox.class, this);
        btnOK.setAction(actionMap.get("clickOK")); // NOI18N
        btnOK.setText(resourceMap.getString("btnOK.text")); // NOI18N
        btnOK.setName("btnOK"); // NOI18N

        btnClose.setAction(actionMap.get("clickCancel")); // NOI18N
        btnClose.setText(resourceMap.getString("btnClose.text")); // NOI18N
        btnClose.setName("btnClose"); // NOI18N

        txtDeviceID.setText(resourceMap.getString("txtDeviceID.text")); // NOI18N
        txtDeviceID.setName("txtDeviceID"); // NOI18N

        lbDeviceID.setFont(lbDeviceID.getFont().deriveFont(lbDeviceID.getFont().getStyle() | java.awt.Font.BOLD, lbDeviceID.getFont().getSize()+4));
        lbDeviceID.setText(resourceMap.getString("lbDeviceID.text")); // NOI18N
        lbDeviceID.setName("lbDeviceID"); // NOI18N

        txtJoinKey.setText(resourceMap.getString("txtJoinKey.text")); // NOI18N
        txtJoinKey.setName("txtJoinKey"); // NOI18N

        lbJoinKey.setFont(lbJoinKey.getFont().deriveFont(lbJoinKey.getFont().getStyle() | java.awt.Font.BOLD, lbJoinKey.getFont().getSize()+4));
        lbJoinKey.setText(resourceMap.getString("lbJoinKey.text")); // NOI18N
        lbJoinKey.setName("lbJoinKey"); // NOI18N

        lbDeviceIDExample.setFont(lbDeviceIDExample.getFont().deriveFont(lbDeviceIDExample.getFont().getStyle() & ~java.awt.Font.BOLD));
        lbDeviceIDExample.setText(resourceMap.getString("lbDeviceIDExample.text")); // NOI18N
        lbDeviceIDExample.setName("lbDeviceIDExample"); // NOI18N

        lbJoinKeyExample.setFont(lbJoinKeyExample.getFont().deriveFont(lbJoinKeyExample.getFont().getStyle() & ~java.awt.Font.BOLD));
        lbJoinKeyExample.setText(resourceMap.getString("lbJoinKeyExample.text")); // NOI18N
        lbJoinKeyExample.setName("lbJoinKeyExample"); // NOI18N

        lbDeviceTagExample.setFont(lbDeviceTagExample.getFont().deriveFont(lbDeviceTagExample.getFont().getStyle() & ~java.awt.Font.BOLD));
        lbDeviceTagExample.setText(resourceMap.getString("lbDeviceTagExample.text")); // NOI18N
        lbDeviceTagExample.setName("lbDeviceTagExample"); // NOI18N

        txtDeviceTag.setText(resourceMap.getString("txtDeviceTag.text")); // NOI18N
        txtDeviceTag.setName("txtDeviceTag"); // NOI18N

        lbDeviceTag.setFont(lbDeviceTag.getFont().deriveFont(lbDeviceTag.getFont().getStyle() | java.awt.Font.BOLD, lbDeviceTag.getFont().getSize()+4));
        lbDeviceTag.setText(resourceMap.getString("lbDeviceTag.text")); // NOI18N
        lbDeviceTag.setName("lbDeviceTag"); // NOI18N

        lbDeviceType.setFont(lbDeviceType.getFont().deriveFont(lbDeviceType.getFont().getStyle() | java.awt.Font.BOLD, lbDeviceType.getFont().getSize()+4));
        lbDeviceType.setText(resourceMap.getString("lbDeviceType.text")); // NOI18N
        lbDeviceType.setName("lbDeviceType"); // NOI18N

        cbDeviceType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "AP", "ROUTER", "GATEWAY", "FIELDDEVICE", "HANDHELD", "NWKMGR" }));
        cbDeviceType.setName("cbDeviceType"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnOK)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnClose)
                .addGap(54, 54, 54))
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lbDeviceType)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cbDeviceType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(382, 382, 382))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(lbDeviceTag)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtDeviceTag)
                                .addComponent(lbDeviceTagExample))
                            .addContainerGap())
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(lbDeviceID)
                                    .addGap(18, 18, 18)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txtDeviceID)
                                        .addComponent(lbDeviceIDExample))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 205, Short.MAX_VALUE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(lbJoinKey, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(22, 22, 22)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(lbJoinKeyExample)
                                        .addComponent(txtJoinKey, javax.swing.GroupLayout.DEFAULT_SIZE, 489, Short.MAX_VALUE))))
                            .addGap(27, 27, 27)))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbDeviceType)
                    .addComponent(cbDeviceType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbDeviceID)
                    .addComponent(txtDeviceID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4)
                .addComponent(lbDeviceIDExample)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbJoinKey)
                    .addComponent(txtJoinKey, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4)
                .addComponent(lbJoinKeyExample)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lbDeviceTag)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnClose)
                            .addComponent(btnOK)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtDeviceTag, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4)
                        .addComponent(lbDeviceTagExample)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
        doClose(RET_CANCEL);
    }//GEN-LAST:event_closeDialog

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClose;
    private javax.swing.JButton btnOK;
    private javax.swing.JComboBox cbDeviceType;
    private javax.swing.JTextField txtDeviceID;
    private javax.swing.JTextField txtDeviceTag;
    private javax.swing.JTextField txtJoinKey;
    // End of variables declaration//GEN-END:variables

    private int returnStatus = RET_CANCEL;
    private int CurIndex;
    private String DeviceType;
    private String DeviceID;
    private String JoinKey;
    private String DeviceTag;
}